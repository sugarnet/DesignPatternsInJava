*Motivation

We need to be informed when certain things happen
    Object's field changes
    Objects does something
    Some external event occurs

We want to listen to events and notified when they occur

Typical pattern involves addXxxListener()

Java now has functional objects
    Supplier<T>, Consumer<T>, Function<T>

* Definition
An observer is an object that wishes to be informed about events happening in the system.
The entity generating the events is an Observable

* Summary
Observer is an intrusive approach: an observable must provide an event to subscribe to

Special care must be taken to prevent issues in multithreaded scenarios

Rx uses Observer<T> / Observable<T>